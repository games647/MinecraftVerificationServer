# Config
# Backslashes ('\') can be used to linewrap

########################
####    General     ####
########################

# Which log level should be displayed
# Any more detailed log levels are hidden
logLevel=INFO

# If the fake server started successfully
# but an error occurred during runtime
# (i.e. lost connection to the database)
# should the server shutdown?
shutdownOnError=false

########################
####    Database    ####
########################

# MySQL (or MariaDB)
driverType=mariadb
host=localhost
port=3306
database=minecraft_users
username=
password=

# How many seconds it should wait for creating a new connection tot he database
# Time in milliseconds - default 3 seconds
connectionTimeout=3000

# CREATE Statements if the database doesn't exist
# If you already have one or don't need it set it empty
createUserTable=CREATE TABLE IF NOT EXIST `users` ( \
    `UserID` INTEGER PRIMARY KEY AUTOINCREMENT, \
    `UUID` BINARY(16) NOT NULL, \
    `Username` VARCHAR(32) NOT NULL , \
    `IP` BINARY(32) NOT NULL, \
    `Premium` BIT NOT NULL, \
    UNIQUE (`UUID`) , \
    )
createTokenTable=CREATE TABLE IF NOT EXIST  `token` ( \
    `UserID` INTEGER PRIMARY KEY, \
    `Token` CHAR(4) NOT NULL, \
    FOREIGN KEY (`UserID`) REFERENCES `users`(`UserID`) \
        ON DELETE CASCADE \
    )

# Update
# If you don't need it set it empty
updateUserTable=INSERT INTO `users` (`UUID`, `Username`, `IP`, `Premium`) VALUES (?, ?, ?, ?) \
    ON DUPLICATE KEY UPDATE `Premium`=1
updateTokenTable=INSERT INTO `users` (`UserId`, `Token`) VALUES (?, ?) \
    ON DUPLICATE KEY UPDATE `Token`=?

####################
####    Token   ####
####################

# What's the length of the token it should generate
tokenLength=4

####################
####    Motd    ####
####################

# The users are sending their own version to the server
# This fake server can then respond with the same version
# in order to work around the "Server is outdatet message
guessProtocol=true

# If the above check failed or a serverlist pings the server
# which protocolversion should we respond
# You can find a list here: http://wiki.vg/Protocol_version_numbers
# If this is empty the last one is used
protocol=

# If an outdated client or a serverlist pings this server
# This message will be displayed
# For example Spigot servers displays: 'Spigot 1.8.8'
# ServerLists maybe depend on this value
version=1.9

# How the player slots should be displayed
# Slots

# Custom player count
onlinePlayers=-1
maxPlayers=-1

# Sends a empty slot count
disabledSlots=false

# This sends a list of which players are online
# You can define as many players as you want
# You can also colorize the name with '\u00a7' as the color code

# Warning: some serververlist depend on this value
# For example in order to check if the server is online mode
# the playernames have to have premium Mojang UUIDs
# fakePlayer.name=UUID
fakePlayer.games647=0aaa2c13-922a-411b-b655-9b8c08404695
fakePlayer.Notch=069a79f4-44e9-4726-a5be-fca90e38aaf5
fakePlayer.Dinnerbone=61699b2e-d327-4a01-9f1e-0ea8c3f06bc6

########################
####    Messages    ####
########################

# All messages the server is senting to the client
# Instead of using & use \u00a7 as the color code symbol
# For new lines use \n

# Motd message when pinging the server
motd=\u00a7aVerification Server

# %code is replaced by the verification code
# If you don't have this option you can just remove it.
kickMessage=Your session is verified: %code

# When an error occurred the player will be kicked with this message
errorMessage=\u00a7cAn error occured. Please try it later.

# You can define a custom slot message
# This message will override the onlinePlayers and maxPlayers setting
# Warning: This will cause the client to display the server as outdated
# If don't want to use it leave it empty
customSlotsMessage=